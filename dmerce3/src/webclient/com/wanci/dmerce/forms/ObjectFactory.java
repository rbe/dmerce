//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.09 at 04:45:04 CET 
//


package com.wanci.dmerce.forms;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.wanci.dmerce.forms package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends com.wanci.dmerce.forms.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
    public final static java.lang.Class version = (com.wanci.dmerce.forms.impl.JAXBVersion.class);

    static {
        defaultImplementations.put("com.wanci.dmerce.forms.MESSAGES.Warning", "com.wanci.dmerce.forms.impl.MESSAGESImpl.WarningImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.OPTIONS", "com.wanci.dmerce.forms.impl.OPTIONSImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.FORM", "com.wanci.dmerce.forms.impl.FORMImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.PERIOD", "com.wanci.dmerce.forms.impl.PERIODImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.FIELD", "com.wanci.dmerce.forms.impl.FIELDImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.CONSTRAINTS", "com.wanci.dmerce.forms.impl.CONSTRAINTSImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.MESSAGES.Error", "com.wanci.dmerce.forms.impl.MESSAGESImpl.ErrorImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.Forms", "com.wanci.dmerce.forms.impl.FormsImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.OPTION", "com.wanci.dmerce.forms.impl.OPTIONImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.FormsType", "com.wanci.dmerce.forms.impl.FormsTypeImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.MESSAGES", "com.wanci.dmerce.forms.impl.MESSAGESImpl");
        defaultImplementations.put("com.wanci.dmerce.forms.CONSTRAINT", "com.wanci.dmerce.forms.impl.CONSTRAINTImpl");
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.wanci.dmerce.forms
     * 
     */
    public ObjectFactory() {
        super(new com.wanci.dmerce.forms.ObjectFactory.GrammarInfoImpl());
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface the Class object of the javacontent interface to instantiate
     * @return a new instance
     * @throws JAXBException if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @return the value of the requested property
     * @throws PropertyException when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @param value the value of the property to be set
     * @throws PropertyException when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of MESSAGESWarning
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.MESSAGES.Warning createMESSAGESWarning()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.MESSAGESImpl.WarningImpl();
    }

    /**
     * Create an instance of OPTIONS
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.OPTIONS createOPTIONS()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.OPTIONSImpl();
    }

    /**
     * Create an instance of FORM
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.FORM createFORM()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.FORMImpl();
    }

    /**
     * Create an instance of PERIOD
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.PERIOD createPERIOD()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.PERIODImpl();
    }

    /**
     * Create an instance of FIELD
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.FIELD createFIELD()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.FIELDImpl();
    }

    /**
     * Create an instance of CONSTRAINTS
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.CONSTRAINTS createCONSTRAINTS()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.CONSTRAINTSImpl();
    }

    /**
     * Create an instance of MESSAGESError
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.MESSAGES.Error createMESSAGESError()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.MESSAGESImpl.ErrorImpl();
    }

    /**
     * Create an instance of Forms
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.Forms createForms()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.FormsImpl();
    }

    /**
     * Create an instance of OPTION
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.OPTION createOPTION()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.OPTIONImpl();
    }

    /**
     * Create an instance of FormsType
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.FormsType createFormsType()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.FormsTypeImpl();
    }

    /**
     * Create an instance of MESSAGES
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.MESSAGES createMESSAGES()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.MESSAGESImpl();
    }

    /**
     * Create an instance of CONSTRAINT
     * 
     * @throws JAXBException if an error occurs
     */
    public com.wanci.dmerce.forms.CONSTRAINT createCONSTRAINT()
        throws javax.xml.bind.JAXBException
    {
        return new com.wanci.dmerce.forms.impl.CONSTRAINTImpl();
    }

    private static class GrammarInfoImpl
        extends com.wanci.dmerce.forms.impl.runtime.AbstractGrammarInfoImpl
    {


        public java.lang.Class getDefaultImplementation(java.lang.Class javaContentInterface) {
            java.lang.Class c = null;
            try {
                c = java.lang.Class.forName(((java.lang.String) defaultImplementations.get(javaContentInterface.getName())));
            } catch (java.lang.Exception _x) {
                c = null;
            }
            return c;
        }

        public com.wanci.dmerce.forms.impl.runtime.UnmarshallingEventHandler createUnmarshaller(java.lang.String uri, java.lang.String local, com.wanci.dmerce.forms.impl.runtime.UnmarshallingContext context) {
            if (("forms" == local)&&("http://www.1ci.de" == uri)) {
                return new com.wanci.dmerce.forms.impl.FormsImpl().createUnmarshaller(context);
            }
            return null;
        }

        public java.lang.Class getRootElement(java.lang.String uri, java.lang.String local) {
            if (("forms" == local)&&("http://www.1ci.de" == uri)) {
                return (com.wanci.dmerce.forms.impl.FormsImpl.class);
            }
            return null;
        }

        public boolean recognize(java.lang.String uri, java.lang.String local) {
            if (("forms" == local)&&("http://www.1ci.de" == uri)) {
                return true;
            }
            return false;
        }

        public java.lang.String[] getProbePoints() {
            return new java.lang.String[] {"http://www.1ci.de", "forms"};
        }

    }

}
