//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.30 at 06:31:07 CET 
//


package com.wanci.dmerce.workflow.xmlbridge.impl;

public class PAGEImpl implements com.wanci.dmerce.workflow.xmlbridge.PAGE, com.sun.xml.bind.JAXBObject, com.wanci.dmerce.workflow.xmlbridge.impl.runtime.UnmarshallableObject, com.wanci.dmerce.workflow.xmlbridge.impl.runtime.XMLSerializable, com.wanci.dmerce.workflow.xmlbridge.impl.runtime.ValidatableObject
{

    protected java.lang.String _Formid;
    protected com.wanci.dmerce.workflow.xmlbridge.FORMMAP _Formmap;
    protected boolean has_Editable;
    protected boolean _Editable;
    protected java.lang.String _Template;
    protected java.lang.String _Id;
    protected com.sun.xml.bind.util.ListImpl _Transition = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (com.wanci.dmerce.workflow.xmlbridge.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.wanci.dmerce.workflow.xmlbridge.PAGE.class);
    }

    public java.lang.String getFormid() {
        return _Formid;
    }

    public void setFormid(java.lang.String value) {
        _Formid = value;
    }

    public com.wanci.dmerce.workflow.xmlbridge.FORMMAP getFormmap() {
        return _Formmap;
    }

    public void setFormmap(com.wanci.dmerce.workflow.xmlbridge.FORMMAP value) {
        _Formmap = value;
    }

    public boolean isEditable() {
        return _Editable;
    }

    public void setEditable(boolean value) {
        _Editable = value;
        has_Editable = true;
    }

    public java.lang.String getTemplate() {
        return _Template;
    }

    public void setTemplate(java.lang.String value) {
        _Template = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public java.util.List getTransition() {
        return _Transition;
    }

    public com.wanci.dmerce.workflow.xmlbridge.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.UnmarshallingContext context) {
        return new com.wanci.dmerce.workflow.xmlbridge.impl.PAGEImpl.Unmarshaller(context);
    }

    public void serializeElementBody(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = _Transition.size();
        if (_Formmap!= null) {
            context.startElement("http://www.1ci.de", "formmap");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Formmap));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Formmap));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Formmap));
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("http://www.1ci.de", "transition");
            int idx_2 = idx6;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Transition.get(idx_2 ++)));
            context.endNamespaceDecls();
            int idx_3 = idx6;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Transition.get(idx_3 ++)));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Transition.get(idx6 ++)));
            context.endElement();
        }
    }

    public void serializeAttributes(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = _Transition.size();
        context.startAttribute("", "id");
        try {
            context.text(((java.lang.String) _Id));
        } catch (java.lang.Exception e) {
            com.wanci.dmerce.workflow.xmlbridge.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        context.startAttribute("", "template");
        try {
            context.text(((java.lang.String) _Template));
        } catch (java.lang.Exception e) {
            com.wanci.dmerce.workflow.xmlbridge.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (has_Editable) {
            context.startAttribute("", "editable");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Editable)));
            } catch (java.lang.Exception e) {
                com.wanci.dmerce.workflow.xmlbridge.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Formid!= null) {
            context.startAttribute("", "formid");
            try {
                context.text(((java.lang.String) _Formid));
            } catch (java.lang.Exception e) {
                com.wanci.dmerce.workflow.xmlbridge.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeAttributeBody(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = _Transition.size();
        if (_Formmap!= null) {
            context.startElement("http://www.1ci.de", "formmap");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Formmap));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Formmap));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Formmap));
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("http://www.1ci.de", "transition");
            int idx_2 = idx6;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Transition.get(idx_2 ++)));
            context.endNamespaceDecls();
            int idx_3 = idx6;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Transition.get(idx_3 ++)));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Transition.get(idx6 ++)));
            context.endElement();
        }
    }

    public void serializeURIs(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = _Transition.size();
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.wanci.dmerce.workflow.xmlbridge.PAGE.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\tC\u00ea\u0093ppsq\u0000~\u0000\u0000\u0007\u00bf\u00faVppsq\u0000~\u0000\u0000\u0004"
+"[\u001f\u00e1ppsq\u0000~\u0000\u0000\u0002\u00dc\u00a68ppsq\u0000~\u0000\u0000\u0000-!\u00ceppsr\u0000\u001dcom.sun.msv.grammar.ChoiceE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u0016\u0090\u00e3ppsr\u0000\'com.sun.msv.grammar.trex.Elemen"
+"tPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameC"
+"lass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreU"
+"ndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0016\u0090\u00d8sr\u0000\u0011java.la"
+"ng.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\f\u0000\u0016\u0090\u00cdpp\u0000sq\u0000~\u0000\n\u0000\u0016\u0090\u00c2pps"
+"r\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.ms"
+"v.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0016\u0090\u00b7q\u0000~\u0000\u0011psr\u0000 "
+"com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnam"
+"eClassq\u0000~\u0000\rxq\u0000~\u0000\u0003\u0000\u0016\u0090\u00b4q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Expressio"
+"n$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0010\u0001psr\u0000 com.su"
+"n.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar"
+".NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Ep"
+"silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001bpsr\u0000#com.sun.msv.gr"
+"ammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/St"
+"ring;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000+com.wanci.dmerce.workflow."
+"xmlbridge.FORMMAPt\u0000+http://java.sun.com/jaxb/xjc/dummy-eleme"
+"ntssq\u0000~\u0000!t\u0000\u0007formmapt\u0000\u0011http://www.1ci.deq\u0000~\u0000 sq\u0000~\u0000\n\u0000\u0016\u0090\u00e6ppsq\u0000~"
+"\u0000\u0014\u0000\u0016\u0090\u00dbq\u0000~\u0000\u0011psq\u0000~\u0000\f\u0000\u0016\u0090\u00d8q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\f\u0000\u0016\u0090\u00cdpp\u0000sq\u0000~\u0000\n\u0000\u0016\u0090\u00c2ppsq\u0000~\u0000\u0014"
+"\u0000\u0016\u0090\u00b7q\u0000~\u0000\u0011psq\u0000~\u0000\u0017\u0000\u0016\u0090\u00b4q\u0000~\u0000\u0011pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.com.wanci."
+"dmerce.workflow.xmlbridge.TRANSITIONq\u0000~\u0000%sq\u0000~\u0000!t\u0000\ntransition"
+"q\u0000~\u0000(q\u0000~\u0000 sq\u0000~\u0000\u0017\u0002\u00af\u0084eppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004"
+"namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00ff$#ppsr\u0000#com.sun."
+"msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*co"
+"m.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.s"
+"un.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.d"
+"atatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\b"
+"typeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/White"
+"SpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006strin"
+"gsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001e"
+"jB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u0000@q\u0000~\u0000?sq\u0000"
+"~\u0000!t\u0000\u0002idt\u0000\u0000sq\u0000~\u0000\u0017\u0001~y\u00a4ppq\u0000~\u00008sq\u0000~\u0000!t\u0000\btemplateq\u0000~\u0000Jsq\u0000~\u0000\n\u0003d\u00dap"
+"ppsq\u0000~\u0000\u0017\u0003d\u00daeq\u0000~\u0000\u0011psq\u0000~\u00005\u0001\u009e\u00839ppsr\u0000$com.sun.msv.datatype.xsd.B"
+"ooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000:q\u0000~\u0000?t\u0000\u0007booleansr\u00005com.sun.msv.da"
+"tatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Bq\u0000~\u0000"
+"Esq\u0000~\u0000Fq\u0000~\u0000Sq\u0000~\u0000?sq\u0000~\u0000!t\u0000\beditableq\u0000~\u0000Jq\u0000~\u0000 sq\u0000~\u0000\n\u0001\u0083\u00f08ppsq\u0000~"
+"\u0000\u0017\u0001\u0083\u00f0-q\u0000~\u0000\u0011pq\u0000~\u00008sq\u0000~\u0000!t\u0000\u0006formidq\u0000~\u0000Jq\u0000~\u0000 sr\u0000\"com.sun.msv.gr"
+"ammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gr"
+"ammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Ex"
+"pressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006par"
+"entq\u0000~\u0000^[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000e\u0000\u0000"
+"\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Np"
+"ppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Yp"
+"ppppppq\u0000~\u0000\u0016q\u0000~\u0000.pppppppppq\u0000~\u0000\u0013q\u0000~\u0000-pppppppppq\u0000~\u0000\tppppppppppp"
+"ppq\u0000~\u0000*pppppppq\u0000~\u0000\u000bppq\u0000~\u0000)ppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000\bpppppppppppq"
+"\u0000~\u0000\u0007"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.wanci.dmerce.workflow.xmlbridge.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(com.wanci.dmerce.workflow.xmlbridge.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.wanci.dmerce.workflow.xmlbridge.impl.PAGEImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("transition" == ___local)&&("http://www.1ci.de" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "template");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "formid");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        if (("formmap" == ___local)&&("http://www.1ci.de" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "table");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  15 :
                        if (("transition" == ___local)&&("http://www.1ci.de" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "target");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "validation");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "url");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "editable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Template = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Formid = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Editable = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Editable = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "template");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  17 :
                        if (("transition" == ___local)&&("http://www.1ci.de" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "formid");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "table");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "target");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "validation");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "url");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  14 :
                        if (("formmap" == ___local)&&("http://www.1ci.de" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "editable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("template" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("formid" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  13 :
                        if (("table" == ___local)&&("" == ___uri)) {
                            _Formmap = ((com.wanci.dmerce.workflow.xmlbridge.impl.FORMMAPImpl) spawnChildFromEnterAttribute((com.wanci.dmerce.workflow.xmlbridge.impl.FORMMAPImpl.class), 14, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  16 :
                        if (("target" == ___local)&&("" == ___uri)) {
                            _Transition.add(((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl) spawnChildFromEnterAttribute((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("validation" == ___local)&&("" == ___uri)) {
                            _Transition.add(((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl) spawnChildFromEnterAttribute((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("url" == ___local)&&("" == ___uri)) {
                            _Transition.add(((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl) spawnChildFromEnterAttribute((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        if (("name" == ___local)&&("" == ___uri)) {
                            _Transition.add(((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl) spawnChildFromEnterAttribute((com.wanci.dmerce.workflow.xmlbridge.impl.TRANSITIONImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("editable" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        attIdx = context.getAttribute("", "template");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 6;
                            continue outer;
                        }
                        break;
                    case  8 :
                        if (("editable" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "formid");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  13 :
                        attIdx = context.getAttribute("", "table");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "target");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "validation");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "url");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("template" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "editable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  11 :
                        if (("formid" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  3 :
                            attIdx = context.getAttribute("", "template");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText0(v);
                                state = 6;
                                continue outer;
                            }
                            break;
                        case  9 :
                            attIdx = context.getAttribute("", "formid");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  10 :
                            eatText1(value);
                            state = 11;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  13 :
                            attIdx = context.getAttribute("", "table");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  4 :
                            eatText0(value);
                            state = 5;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  7 :
                            eatText3(value);
                            state = 8;
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "target");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "validation");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "url");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  6 :
                            attIdx = context.getAttribute("", "editable");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
