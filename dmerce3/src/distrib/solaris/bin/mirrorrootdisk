#!/bin/ksh

#################################################
#
# Copyright 2000-2004 1[wan]Ci GmbH, http://www.1ci.com
#
# $Id$
# $Author$
# $Revision$
#
# Sun Solaris(TM) Volume Manager
# Mirror a whole disk (RAID-1)
# 
#################################################

fmth() {
    DISK=$1s2
    SLICEDATA=$2
    fmthard -d "$SLICEDATA" /dev/rdsk/$DISK
    if [ $? != 0 ]; then
        echo "Create partition '$SLICEDATA' on disk '$DISK' failed"
        exit
    else
        echo "Created partition '$SLICEDATA' on disk '$DISK'"
    fi
}

slice_exists() {
    DISK=$1
    SLICE=$2
    slice_exists=`prtvtoc -h $DISKs2 | awk '{print $1}' | grep -c $SLICE`
    echo "Does slice '$SLICE' exist on disk '$DISK'? ($slice_exists)" >> /tmp/qdsdsmirr.log
    echo $slice_exists
}

get_metadb_count() { # wird bereits SDS benutzt?
    METADB_I=`metadb 2>/dev/null | wc -l | sed 's# ##g'`
    echo $METADB_I
}

get_highest_md() { # hoechste bereits benutzte disk rausfinden
    HIGHEST_MD=0
    for i in `metastat | grep "^d" | sed 's#d##' | awk -F: '{print $1}'`
      do
      [ $i -gt $HIGHEST_MD ] && HIGHEST_MD=$i
    done
    echo $HIGHEST_MD
}

gather() {
    METADB_SLICE_SIZE=32640

    SWAP_SLICE_BEGIN=`prtvtoc -h /dev/rdsk/$ROOT_DISKs2 | awk '{if ($2=="3" && $3=="01") print $4}'`
    SWAP_SLICE_END=`prtvtoc -h /dev/rdsk/$ROOT_DISKs2 | awk '{if ($2=="3" && $3=="01") print $6}'`
    SWAP_SLICE_NEW_END=`expr $SWAP_SLICE_END - $METADB_SLICE_SIZE`
    SWAP_SLICE_SIZE=`expr $SWAP_SLICE_NEW_END - $SWAP_SLICE_BEGIN + 1`
    SWAP_SLICE_DATA="1:3:1:$SWAP_SLICE_BEGIN:$SWAP_SLICE_SIZE"

    METADB_SLICE_BEGIN=`expr $SWAP_SLICE_NEW_END + 1`
    for slice in 0 1 3 4 5 6 7
      do
      [ `slice_exists $ROOT_DISK $slice` -eq 0 ] && break
    done
    METADB_SLICE=$slice
    METADB_SLICE_DATA="$METADB_SLICE:0:0:$METADB_SLICE_BEGIN:$METADB_SLICE_SIZE"

    export SWAP_SLICE_DATA
    export METADB_SLICE_DATA
    export METADB_SLICE
}

vtoc2fmthard() {
    DISK=$1
    echo `prtvtoc -h /dev/rdsk/$DISKs2 | awk '{print $1":"$2":"$3":"$4":"$5}'`
}

#libdmerce_copyr
echo "Creating mirror with '$ROOT_DISK' and '$MIRROR_DISK'"
echo

#[ `libsh_amiroot` -eq 0 ] && ( echo "Must be root!"; exit 255 )

ROOT_DISK="c0t2d0"
MIRROR_DISK="c0t0d0"

gather

if [ $METADB_I -eq 0 ]; then
    fmth $ROOT_DISK $SWAP_SLICE_DATA
    fmth $ROOT_DISK $METADB_SLICE_DATA

    for f in `vtoc2fmthard $ROOT_DISK`
      do
      fmthard -d "$f" $MIRROR_DISK
    done

    metadb -a -c 3 -f $ROOT_DISK$METADB_SLICE
    metadb -a -c 3 -f $MIRROR_DISK$METADB_SLICE
fi

HIGHEST_MD=`get_highest_md`

metainit -f d21 1 1 $ROOT_DISKs1
metainit d22 1 1 $MIRROR_DISKs1
metainit d2 -m d21

metainit -f d31 1 1 $ROOT_DISKs3
metainit d32 1 1 $MIRROR_DISKs3
metainit d3 -m d31

metainit -f d41 1 1 $ROOT_DISKs4
metainit d42 1 1 $MIRROR_DISKs4
metainit d4 -m d41

metainit -f d51 1 1 $ROOT_DISKs5
metainit d52 1 1 $MIRROR_DISKs5
metainit d5 -m d51

metainit -f d61 1 1 $ROOT_DISKs6
metainit d62 1 1 $MIRROR_DISKs6
metainit d6 -m d61

metainit -f d71 1 1 $ROOT_DISKs7
metainit d72 1 1 $MIRROR_DISKs7
metainit d7 -m d71

#
# vfstab anpassen
#
cp /etc/vfstab /etc/vfstab-`date +%Y%m%d`
echo "s#/dev/dsk/${ROOT_DISK}s1#/dev/md/dsk/d2#g
s#/dev/dsk/${ROOT_DISK}s3#/dev/md/dsk/d3#g
s#/dev/dsk/${ROOT_DISK}s4#/dev/md/dsk/d4#g
s#/dev/dsk/${ROOT_DISK}s5#/dev/md/dsk/d5#g
s#/dev/dsk/${ROOT_DISK}s6#/dev/md/dsk/d6#g
s#/dev/dsk/${ROOT_DISK}s7#/dev/md/dsk/d7#g
s#/dev/rdsk/${ROOT_DISK}s1#/dev/md/rdsk/d2#g
s#/dev/rdsk/${ROOT_DISK}s3#/dev/md/rdsk/d3#g
s#/dev/rdsk/${ROOT_DISK}s4#/dev/md/rdsk/d4#g
s#/dev/rdsk/${ROOT_DISK}s5#/dev/md/rdsk/d5#g
s#/dev/rdsk/${ROOT_DISK}s6#/dev/md/rdsk/d6#g
s#/dev/rdsk/${ROOT_DISK}s7#/dev/md/rdsk/d7#g
s#\(/dev/md.*\)-\$#\1logging#g" > /tmp/sed.$$
cat /etc/vfstab | sed -f /tmp/sed.$$ > /tmp/vfstab.2
rm /tmp/sed.$$
mv /tmp/vfstab.2 /etc/vfstab

echo > /etc/rcS.d/S00qdsdsmirror <<EOF
#!/bin/ksh

metattach d1 d12
metattach d2 d22
metattach d3 d32
metattach d4 d42
metattach d5 d52
metattach d6 d62
metattach d7 d72

EOF

EEPROM_SDS_ROOTMIRROR="/devices`ls -l /dev/dsk/$MIRROR_DISKs0 | sed 's#.*/devices##g'`"
eeprom "nvalias sds-rootmirror $EEPROM_SDS_ROOTMIRROR"

metainit -f d11 1 1 $ROOT_DISKs0
metainit d12 1 1 $MIRROR_DISKs0
metainit d1 -m d11
metaroot d1
lockfs -fa

echo "Ready to reboot (yY/nN)?"
read key
[ "$key" -eq "n" -o "$key" -eq "N" ] && exit 2
reboot
